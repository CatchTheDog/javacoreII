1.如果需要知道哪些Unicode字符属于Java中的“字母”，可以使用Character类的isJavaIdentifierStart和isJavaIdentifierPart方法来检测。
2.整数被0除会产生一个异常，而浮点数被0除会得到无穷大或NaN.
3.整数除法和求余对负数操作数的处理：余数总是要>=0;Math.floorMod方法可以处理对负数求余的操作。
4.运算符对操作数自动转换规则：
    •如果两个操作数中有一个是 double 类型， 另一个操作数就会转换为 double 类型。
    •否则， 如果其中一个操作数是 float 类型， 另一个操作数将会转换为 float 类型。
    •否则， 如果其中一个操作数是 long 类型， 另一个操作数将会转换为 long 类型。
    •否则， 两个操作数都将被转换为 int 类型。
5.强制类型转换:Math.round()方法可以得到福地安置最接近的整数
6.位运算：掩码技术 & | ^ ~
         >> << >>>(无符号右移，用0填充高位，而>> 使用符号位填充高位)
7.数组复制：Arrays.copyOf();
8.数组排序：Arrays.sort(); Array.binarySearch();Arrays.equals();
9.LocalDate:用来表示大家熟悉的日历表示法的类
  Date:用来表示时间点的类
